-jest probleme de mock de certaines lib tel que animated, reanim,

answer:
utilisation d'un setup.js pour jest

-jest import after destroying jest

answer:
jest.useFakeTimers()
With above it's extremely important to understand this

jest.useFakeTimers() mocks out setTimeout and other timer functions with mock functions.

If running multiple tests inside of one file or describe block, jest.useFakeTimers(); can be called before each test manually or with a setup function such as beforeEach.

Not doing so will result in the internal usage counter not being reset.

---------------------------------------------------
utilisation de context 1 def le context 

export const TokenContext = React.createContext({
  authToken: "hdqgs",
  handleToken: () => {},
});

2 add le provider dans app et y def les fonctions

//import {TokenContext} from '../styles/themeContext.js'
3 add l'import du context au sein du code ou on desire l'use

//static contextType = TokenContext;
4 faire appel a static contextType = contextchoosen

//console.log(this.context)
5 faire appel au contextchoosen pour avoir le json
---------------------------------------------------
FusionCharts multi graph https://www.fusioncharts.com/fusiontime/examples/stacked-column-chart-with-time-axis?framework=react
  
  this.state = {
      type: 'timeseries',
      width: '100%',
      height: '100%',
      dataFormat: 'json',
      dataSource: {
        data: null,
        "chart": {
          "theme": "gammel"
        },
        caption: {
          text: ' '
        },
        subcaption: {
          text: this.props.subcaption
        },
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
        series:'Sales',
        yAxis: [{
          plot: [
            {
              value: "Power",
              type: "column"
            }
          ],
          title: "Sales Count",
          format: {
            suffix: "K"
          }
        }
      ]

      },
      !!!!!!!!!!!!!!!!!!!!!!!!
      schemaJson: null,
      dataJson: null
    };

  this.formats = [{
      "name": "Time",
      "type": "date",
      "format": "%-m/%-d/%Y"
  }, {
      "name": "Sales",
      "type": "string"
  }, {
    "name": "Power",
    "type": "number"
}
]

var data = [
  [
      "1/4/2011",
      "bastien",
      122
  ],
  [
    "1/4/2011",
    "michel",
     12
  ],
  [
      "1/5/2011",
      "bastien",
      1200
  ],
  [
    "1/5/2011",
    "michel",
    550
  ],
  [
    "1/6/2011",
    "bastien",
    1
],
[
  "1/6/2011",
  "michel",
   0
],
[
    "1/7/2011",
    "bastien",
    4000
],
[
  "1/7/2011",
  "michel",
  2500
],
]